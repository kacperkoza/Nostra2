[1mdiff --git a/.idea/gradle.xml b/.idea/gradle.xml[m
[1mindex fb55192..0e23f8e 100644[m
[1m--- a/.idea/gradle.xml[m
[1m+++ b/.idea/gradle.xml[m
[36m@@ -5,7 +5,7 @@[m
       <GradleProjectSettings>[m
         <option name="distributionType" value="LOCAL" />[m
         <option name="externalProjectPath" value="$PROJECT_DIR$" />[m
[31m-        <option name="gradleHome" value="D:\Programy\Android Studio\gradle\gradle-2.14.1" />[m
[32m+[m[32m        <option name="gradleHome" value="$APPLICATION_HOME_DIR$/gradle/gradle-2.14.1" />[m
         <option name="modules">[m
           <set>[m
             <option value="$PROJECT_DIR$" />[m
[1mdiff --git a/app/build.gradle b/app/build.gradle[m
[1mindex 98662d5..a6cbcb6 100644[m
[1m--- a/app/build.gradle[m
[1m+++ b/app/build.gradle[m
[36m@@ -20,7 +20,7 @@[m [mandroid {[m
 }[m
 [m
 dependencies {[m
[31m-    compile fileTree(dir: 'libs', include: ['*.jar'])[m
[32m+[m[32m    compile fileTree(include: ['*.jar'], dir: 'libs')[m
     androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {[m
         exclude group: 'com.android.support', module: 'support-annotations'[m
     })[m
[36m@@ -30,5 +30,6 @@[m [mdependencies {[m
     compile 'com.android.support:support-v4:25.0.0'[m
     compile 'hanks.xyz:smallbang-library:0.1.2'[m
     compile 'com.android.support:recyclerview-v7:25.0.0'[m
[32m+[m[32m    compile 'joda-time:joda-time:2.9.4'[m
     testCompile 'junit:junit:4.12'[m
 }[m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/Days.java b/app/src/main/java/cosapp/com/nostra/Days.java[m
[1mindex 8fd38d1..e31ed59 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/Days.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/Days.java[m
[36m@@ -3,6 +3,8 @@[m [mpackage cosapp.com.nostra;[m
 /**[m
  * Created by kkoza on 29.01.2017.[m
  */[m
[31m-[m
[31m-public class Days {[m
[32m+[m[32mpublic enum DAYS {[m
[32m+[m[32m    WEEKDAY,[m
[32m+[m[32m    SATURDAY,[m
[32m+[m[32m    SUNDAY[m
 }[m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/Fragments/ParkingMachinesFragment.java b/app/src/main/java/cosapp/com/nostra/Fragments/ParkingMachinesFragment.java[m
[1mindex f51b510..6cb1855 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/Fragments/ParkingMachinesFragment.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/Fragments/ParkingMachinesFragment.java[m
[36m@@ -7,7 +7,6 @@[m [mimport android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
 [m
[31m-import com.google.android.gms.maps.CameraUpdateFactory;[m
 import com.google.android.gms.maps.GoogleMap;[m
 import com.google.android.gms.maps.OnMapReadyCallback;[m
 import com.google.android.gms.maps.SupportMapFragment;[m
[36m@@ -21,6 +20,8 @@[m [mimport cosapp.com.nostra.DataManager;[m
 import cosapp.com.nostra.Place.ParkingMachine;[m
 import cosapp.com.nostra.R;[m
 [m
[32m+[m[32mimport static com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom;[m
[32m+[m
 public class ParkingMachinesFragment extends Fragment implements OnMapReadyCallback {[m
     private DataManager mDataManager;[m
     private GoogleMap mMap;[m
[36m@@ -49,10 +50,11 @@[m [mpublic class ParkingMachinesFragment extends Fragment implements OnMapReadyCallb[m
     public void onMapReady(GoogleMap googleMap) {[m
         mMap = googleMap;[m
         ArrayList<ParkingMachine> list = mDataManager.getParkingMachines();[m
[32m+[m[32m        mDataManager.close();[m
 [m
         for (ParkingMachine pm : list) {[m
             MarkerOptions markerOptions = new MarkerOptions();[m
[31m-            markerOptions.title(pm.getStreet() + "" + pm.getZone());[m
[32m+[m[32m            markerOptions.title(pm.getStreet() + " " + pm.getZone());[m
             markerOptions.position(pm.getCoordinates());[m
             if (pm.getZone().equals("A")) {[m
                 markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_MAGENTA));[m
[36m@@ -61,13 +63,12 @@[m [mpublic class ParkingMachinesFragment extends Fragment implements OnMapReadyCallb[m
             }[m
             mMap.addMarker(markerOptions);[m
         }[m
[31m-        MarkerOptions yourPosition = new MarkerOptions();[m
[31m-        yourPosition.position(new LatLng(52.405794, 16.930569));[m
[31m-        yourPosition.title("Twoja pozycja");[m
[31m-        yourPosition.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_CYAN));[m
[32m+[m
[32m+[m[32m        MarkerOptions yourPosition = new MarkerOptions()[m
[32m+[m[32m                .position(new LatLng(52.405794, 16.930569))[m
[32m+[m[32m                .title("Twoja pozycja")[m
[32m+[m[32m                .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_CYAN));[m
         mMap.addMarker(yourPosition);[m
[31m-        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(52.405794, 16.930569), 12.0f));[m
[31m-[m
[31m-[m
[32m+[m[32m        mMap.moveCamera(newLatLngZoom(new LatLng(52.405794, 16.930569), 18.0f));[m
     }[m
 }[m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/Fragments/TicketMachinesFragment.java b/app/src/main/java/cosapp/com/nostra/Fragments/TicketMachinesFragment.java[m
[1mindex ec4c84b..293ebeb 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/Fragments/TicketMachinesFragment.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/Fragments/TicketMachinesFragment.java[m
[36m@@ -87,14 +87,17 @@[m [mpublic class TicketMachinesFragment extends android.support.v4.app.Fragment impl[m
             LayoutInflater layoutInflater = (LayoutInflater) getActivity().getSystemService( Context.LAYOUT_INFLATER_SERVICE );[m
             view = layoutInflater.inflate(R.layout.info_window_ticket_machines, null);[m
             view.setBackgroundResource(R.drawable.info_window_gradient);[m
[32m+[m
             TextView title = (TextView) view.findViewById(R.id.place_textView);[m
[31m-            TextView description = (TextView) view.findViewById(R.id.description_textView);[m
[31m-            ImageView creditCards = (ImageView) view.findViewById(R.id.credit_card_imageView);[m
             title.setText(marker.getTitle());[m
[31m-            description.setText(marker.getSnippet());[m
             title.setTextColor(Color.BLACK);[m
[32m+[m
[32m+[m[32m            TextView description = (TextView) view.findViewById(R.id.description_textView);[m
[32m+[m[32m            description.setText(marker.getSnippet());[m
             description.setTextColor(Color.BLACK);[m
 [m
[32m+[m[32m            ImageView creditCards = (ImageView) view.findViewById(R.id.credit_card_imageView);[m
[32m+[m
             return view;[m
         }[m
 [m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/Fragments/TicketPointsFragment.java b/app/src/main/java/cosapp/com/nostra/Fragments/TicketPointsFragment.java[m
[1mindex 5c51381..1b12bc1 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/Fragments/TicketPointsFragment.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/Fragments/TicketPointsFragment.java[m
[36m@@ -1,8 +1,106 @@[m
 package cosapp.com.nostra.Fragments;[m
 [m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.support.annotation.Nullable;[m
[32m+[m[32mimport android.support.v4.app.Fragment;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m
[32m+[m[32mimport com.google.android.gms.maps.GoogleMap;[m
[32m+[m[32mimport com.google.android.gms.maps.OnMapReadyCallback;[m
[32m+[m[32mimport com.google.android.gms.maps.SupportMapFragment;[m
[32m+[m[32mimport com.google.android.gms.maps.model.BitmapDescriptorFactory;[m
[32m+[m[32mimport com.google.android.gms.maps.model.LatLng;[m
[32m+[m[32mimport com.google.android.gms.maps.model.MarkerOptions;[m
[32m+[m
[32m+[m[32mimport org.json.JSONException;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.concurrent.ExecutionException;[m
[32m+[m
[32m+[m[32mimport cosapp.com.nostra.DataManager;[m
[32m+[m[32mimport cosapp.com.nostra.JSON.JSONParser;[m
[32m+[m[32mimport cosapp.com.nostra.JSON.JSONReaderTask;[m
[32m+[m[32mimport cosapp.com.nostra.Place.TicketPoint;[m
[32m+[m[32mimport cosapp.com.nostra.R;[m
[32m+[m[32mimport cosapp.com.nostra.Websites;[m
[32m+[m
[32m+[m[32mimport static com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom;[m
[32m+[m
 /**[m
  * Created by kkoza on 29.01.2017.[m
  */[m
 [m
[31m-public class TicketPointsFragment {[m
[32m+[m[32mpublic class TicketPointsFragment extends Fragment implements OnMapReadyCallback {[m
[32m+[m[32m    private DataManager mDataManager;[m
[32m+[m[32m    private GoogleMap mMap;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public View onCreateView(LayoutInflater inflater, ViewGroup container,[m
[32m+[m[32m                             Bundle savedInstanceState) {[m
[32m+[m
[32m+[m[32m        View view = inflater.inflate(R.layout.activity_maps, null, false);[m
[32m+[m
[32m+[m[32m        SupportMapFragment mapFragment = (SupportMapFragment) this.getChildFragmentManager()[m
[32m+[m[32m                .findFragmentById(R.id.map);[m
[32m+[m[32m        mapFragment.getMapAsync(this);[m
[32m+[m
[32m+[m[32m        mDataManager = new DataManager(getActivity());[m
[32m+[m[32m        return view;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {[m
[32m+[m[32m        super.onViewCreated(view, savedInstanceState);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void onMapReady(GoogleMap googleMap) {[m
[32m+[m[32m        mMap = googleMap;[m
[32m+[m
[32m+[m[32m        JSONReaderTask task = new JSONReaderTask(Websites.TICKETS_SALE_POINTS);[m
[32m+[m[32m        task.execute();[m
[32m+[m[32m        String response = null;[m
[32m+[m[32m        try {[m
[32m+[m[32m            response = task.get();[m
[32m+[m[32m        } catch (InterruptedException e) {[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m        } catch (ExecutionException e) {[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        ArrayList<TicketPoint> list = new ArrayList<>(300);[m
[32m+[m[32m        if (response != null) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                list = JSONParser.parseTicketPoints(response);[m
[32m+[m[32m            } catch (JSONException e) {[m
[32m+[m[32m                e.printStackTrace();[m
[32m+[m[32m                Log.d("JSON Exception", e.toString());[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for (TicketPoint tp : list) {[m
[32m+[m[32m            LatLng coords = tp.getCoordinates();[m
[32m+[m[32m            mMap.addMarker(getMarkerWithProperColor(tp).position(coords).title(tp.getPlaceName()));[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        mMap.moveCamera(newLatLngZoom(new LatLng(52.405794, 16.930569), 18.0f));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Return green marker when the shop is currently open. Otherwise its red.[m
[32m+[m[32m     * @param tp[m
[32m+[m[32m     * @return Returns the <code>MarkerOptions</code> with proper color.[m
[32m+[m[32m     */[m
[32m+[m[32m    public MarkerOptions getMarkerWithProperColor(TicketPoint tp) {[m
[32m+[m
[32m+[m[32m        if (tp.isOpened()) {[m
[32m+[m[32m            return new MarkerOptions().icon((BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN)));[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return new MarkerOptions().icon((BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED)));[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/JSON/JSONParser.java b/app/src/main/java/cosapp/com/nostra/JSON/JSONParser.java[m
[1mindex 7067f76..5159c39 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/JSON/JSONParser.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/JSON/JSONParser.java[m
[36m@@ -11,8 +11,10 @@[m [mimport org.json.JSONObject;[m
 import java.util.ArrayList;[m
 [m
 import cosapp.com.nostra.GoogleMaps.GoogleMapsDistance;[m
[32m+[m[32mimport cosapp.com.nostra.OpeningHoursReader;[m
 import cosapp.com.nostra.Place.ParkingMachine;[m
 import cosapp.com.nostra.Place.TicketMachine;[m
[32m+[m[32mimport cosapp.com.nostra.Place.TicketPoint;[m
 [m
 /**[m
  * Created by kkoza on 19.11.2016.[m
[36m@@ -26,7 +28,7 @@[m [mimport cosapp.com.nostra.Place.TicketMachine;[m
  *     <li><code>ArrayList</code> of TicketMachine</li>[m
  *     <li><code>ArrayList</code> of ParkingMachine</li>[m
  *     <li><code>ArrayList</code> of BikeStation</li>[m
[31m- *     <li><code>ArrayList</code> of TicketsPoint </li>[m
[32m+[m[32m *     <li><code>ArrayList</code> of TicketPoint </li>[m
  * </ul>[m
  *[m
  */[m
[36m@@ -121,11 +123,11 @@[m [mpublic class JSONParser {[m
         JSONArray elements = jsonObject.getJSONArray("features");[m
 [m
         for (int i = 0 ; i < elements.length() ; i++) {[m
[31m-            ParkingMachine pm = new ParkingMachine();[m
             JSONObject object = elements.getJSONObject(i);[m
             JSONObject geometry = object.getJSONObject("geometry");[m
             JSONArray coordinates = geometry.getJSONArray("coordinates");[m
             JSONObject properties = object.getJSONObject("properties");[m
[32m+[m
             LatLng coords = new LatLng(coordinates.getDouble(0), coordinates.getDouble(1));[m
             String zone = properties.getString("zone");[m
             String street = properties.getString("street");[m
[36m@@ -134,6 +136,35 @@[m [mpublic class JSONParser {[m
         return list;[m
     }[m
 [m
[32m+[m[32m    public static ArrayList<TicketPoint> parseTicketPoints(String input) throws JSONException {[m
[32m+[m[32m        ArrayList<TicketPoint> list = new ArrayList<>(300);[m
[32m+[m[32m        JSONObject jsonObject = new JSONObject(input);[m
[32m+[m[32m        JSONArray features = jsonObject.getJSONArray("features");[m
[32m+[m
[32m+[m[32m        for (int i = 0 ; i< features.length() ; i++) {[m
[32m+[m[32m            TicketPoint ticketPoint = new TicketPoint();[m
[32m+[m[32m            JSONObject object = features.getJSONObject(i);[m
[32m+[m[32m            JSONObject geometry = object.getJSONObject("geometry");[m
[32m+[m[32m            JSONArray coordinates = geometry.getJSONArray("coordinates");[m
[32m+[m[32m            JSONObject properties = object.getJSONObject("properties");[m
[32m+[m
[32m+[m[32m            LatLng coords = new LatLng(coordinates.getDouble(1), coordinates.getDouble(0));[m
[32m+[m[32m            String weekDayHours = properties.getString("y_4308_godziny_otwar");[m
[32m+[m[32m            String saturdayHours = properties.getString("y_4309_godziny_otwar");[m
[32m+[m[32m            String sundayHours = properties.getString("y_4310_godziny_otwar");[m
[32m+[m[32m            String placeName = properties.getString("nazwa");[m
[32m+[m
[32m+[m[32m            ticketPoint.addOpeningHours(0, OpeningHoursReader.parse(weekDayHours));[m
[32m+[m[32m            ticketPoint.addOpeningHours(1, OpeningHoursReader.parse(saturdayHours));[m
[32m+[m[32m            ticketPoint.addOpeningHours(2, OpeningHoursReader.parse(sundayHours));[m
[32m+[m[32m            ticketPoint.setCoordinates(coords);[m
[32m+[m[32m            ticketPoint.setPlaceName(placeName);[m
[32m+[m
[32m+[m[32m            list.add(ticketPoint);[m
[32m+[m[32m        }[m
[32m+[m[32m        return list;[m
[32m+[m[32m    }[m
[32m+[m
 }[m
 [m
 [m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/OpeningHours.java b/app/src/main/java/cosapp/com/nostra/OpeningHours.java[m
[1mindex ee54332..8f7d732 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/OpeningHours.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/OpeningHours.java[m
[36m@@ -1,8 +1,64 @@[m
 package cosapp.com.nostra;[m
 [m
[32m+[m[32mimport org.joda.time.LocalTime;[m
[32m+[m
 /**[m
  * Created by kkoza on 28.01.2017.[m
  */[m
 [m
 public class OpeningHours {[m
[32m+[m[32m    private LocalTime openedAt;[m
[32m+[m[32m    private LocalTime closedAt;[m
[32m+[m[32m    private boolean closedAllDay;[m
[32m+[m[32m    private boolean openedAllDay;[m
[32m+[m
[32m+[m[32m    public OpeningHours() {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public OpeningHours(LocalTime openedFrom, LocalTime closedAt) {[m
[32m+[m[32m        this.openedAt = openedFrom;[m
[32m+[m[32m        this.closedAt = closedAt;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return "OpeningHours{" +[m
[32m+[m[32m                ", openedAt=" + openedAt +[m
[32m+[m[32m                ", closedAt=" + closedAt +[m
[32m+[m[32m                ", closedAllDay=" + closedAllDay +[m
[32m+[m[32m                ", openedAllDay=" + openedAllDay +[m
[32m+[m[32m                '}';[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean isOpenedAllDay() {[m
[32m+[m[32m        return openedAllDay;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOpenedAllDay(boolean openedAllDay) {[m
[32m+[m[32m        this.openedAllDay = openedAllDay;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean isClosedAllDay() {[m
[32m+[m[32m        return closedAllDay;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setClosedAllDay(boolean closedAllDay) {[m
[32m+[m[32m        this.closedAllDay = closedAllDay;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public LocalTime getOpenedAt() {[m
[32m+[m[32m        return openedAt;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setOpenedAt(LocalTime openedAt) {[m
[32m+[m[32m        this.openedAt = openedAt;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public LocalTime getClosedAt() {[m
[32m+[m[32m        return closedAt;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setClosedAt(LocalTime closedAt) {[m
[32m+[m[32m        this.closedAt = closedAt;[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/OpeningHoursReader.java b/app/src/main/java/cosapp/com/nostra/OpeningHoursReader.java[m
[1mindex 702a5e3..4591ffc 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/OpeningHoursReader.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/OpeningHoursReader.java[m
[36m@@ -1,8 +1,57 @@[m
 package cosapp.com.nostra;[m
 [m
[32m+[m[32mimport org.joda.time.LocalTime;[m
[32m+[m
[32m+[m[32mimport java.text.ParseException;[m
[32m+[m[32mimport java.text.SimpleDateFormat;[m
[32m+[m
 /**[m
[31m- * Created by kkoza on 29.01.2017.[m
[32m+[m[32m * Created by kkoza on 28.01.2017.[m
  */[m
 [m
 public class OpeningHoursReader {[m
[32m+[m[32m    public static OpeningHours parse(String input) {[m
[32m+[m[32m        OpeningHours openingHours = new OpeningHours();[m
[32m+[m
[32m+[m[32m        if (input.equals("nieczynne")) {[m
[32m+[m[32m            openingHours.setClosedAllDay(true);[m
[32m+[m[32m            return openingHours;[m
[32m+[m[32m        } else if (input.equals("24h") || input.equals("24H")) {[m
[32m+[m[32m            openingHours.setOpenedAllDay(true);[m
[32m+[m[32m            return openingHours;[m
[32m+[m[32m        } else if (input.equals("")) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //JSON contains two formats of hour: HH:mm and HH.mm[m
[32m+[m[32m        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("HH:mm");[m
[32m+[m[32m        SimpleDateFormat simpleDateFormat2 = new SimpleDateFormat("HH.mm");[m
[32m+[m
[32m+[m[32m        //Format is 10:00-14:00. Split by '-' to get opening and closing hour seperately.[m
[32m+[m[32m        String[] parts = input.split("-");[m
[32m+[m[32m        LocalTime openedAt = null;[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            openedAt = new LocalTime(simpleDateFormat.parse(parts[0]));[m
[32m+[m[32m        } catch (ParseException e) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                openedAt = new LocalTime(simpleDateFormat2.parse(parts[0]));[m
[32m+[m[32m            } catch (ParseException e1) {[m
[32m+[m[32m                e1.printStackTrace();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        LocalTime closedAt = null;[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            closedAt = new LocalTime(simpleDateFormat.parse(parts[1]));[m
[32m+[m[32m        } catch (ParseException e) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                closedAt = new LocalTime(simpleDateFormat2.parse(parts[1]));[m
[32m+[m[32m            } catch (ParseException e1) {[m
[32m+[m[32m                e1.printStackTrace();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return new OpeningHours(openedAt, closedAt);[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/Place/Place.java b/app/src/main/java/cosapp/com/nostra/Place/Place.java[m
[1mindex a73e69f..5a49141 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/Place/Place.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/Place/Place.java[m
[36m@@ -9,6 +9,9 @@[m [mpublic abstract class Place {[m
     private LatLng coordinates;[m
     private String placeName;[m
 [m
[32m+[m[32m    public Place() {[m
[32m+[m[32m    }[m
[32m+[m
     public Place(LatLng coordinates, String placeName) {[m
         this.coordinates = coordinates;[m
         this.placeName = placeName;[m
[1mdiff --git a/app/src/main/java/cosapp/com/nostra/Place/TicketPoint.java b/app/src/main/java/cosapp/com/nostra/Place/TicketPoint.java[m
[1mindex d3c1276..add91c9 100644[m
[1m--- a/app/src/main/java/cosapp/com/nostra/Place/TicketPoint.java[m
[1m+++ b/app/src/main/java/cosapp/com/nostra/Place/TicketPoint.java[m
[36m@@ -1,19 +1,76 @@[m
 package cosapp.com.nostra.Place;[m
 [m
[31m-import com.google.android.gms.maps.model.LatLng;[m
[32m+[m[32mimport java.util.Calendar;[m
[32m+[m[32mimport java.util.HashMap;[m
[32m+[m
[32m+[m[32mimport cosapp.com.nostra.OpeningHours;[m
 [m
 /**[m
  * Created by kkoza on 24.11.2016.[m
  */[m
 [m
[31m-//TODO finish after succesful implementation of parking, ticket, bike[m
[31m-[m
 public class TicketPoint extends Place {[m
[32m+[m[32m    /**[m
[32m+[m[32m     * How to use key:[m
[32m+[m[32m     * 0 - weekdays[m
[32m+[m[32m     * 1 - saturdays[m
[32m+[m[32m     * 2 - sundays and holidays[m
[32m+[m[32m     */[m
[32m+[m[32m    private HashMap<Integer, OpeningHours> openingHours;[m
 [m
[32m+[m[32m    public TicketPoint() {[m
[32m+[m[32m        openingHours = new HashMap<>(3);[m
[32m+[m[32m    }[m
 [m
[32m+[m[32m    public boolean isOpened() {[m
[32m+[m[32m        //get key based on current day[m
[32m+[m[32m        int key = getKey();[m
 [m
[32m+[m[32m        OpeningHours oh = openingHours.get(key);[m
 [m
[31m-    public TicketPoint(LatLng coordinates, String placeName) {[m
[31m-        super(coordinates, placeName);[m
[32m+[m[32m        if (oh != null) {[m
[32m+[m[32m            if (oh.isOpenedAllDay()) {[m
[32m+[m[32m                return true;[m
[32m+[m[32m            } else if (oh.isClosedAllDay()) {[m
[32m+[m[32m                return false;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        //implement currentTime between two LocalTime.[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private int getKey() {[m
[32m+[m[32m        Calendar calendar = Calendar.getInstance();[m
[32m+[m[32m        int currentDay = calendar.get(Calendar.DAY_OF_WEEK);[m
[32m+[m[32m        int key;[m
[32m+[m
[32m+[m[32m        switch (currentDay) {[m
[32m+[m[32m            case Calendar.SATURDAY:[m
[32m+[m[32m                key = 1;[m
[32m+[m[32m                break;[m
[32m+[m
[32m+[m[32m            case Calendar.SUNDAY:[m
[32m+[m[32m                key = 2;[m
[32m+[m[32m                break;[m
[32m+[m
[32m+[m[32m            //if current day is between Monday and Friday[m
[32m+[m[32m            default:[m
[32m+[m[32m                key = 0;[m
[32m+[m[32m                break;[m
[32m+[m[32m        }[m
[32m+[m[32m        return key;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void addOpeningHours(Integer key, OpeningHours oh) {[m
[32m+[m[32m        openingHours.put(key, oh);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String toString() {[m
[32m+[m[32m        return super.toString() + "TicketPoint{" +[m
[32m+[m[32m                "openingHours=" + openingHours +[m
[32m+[m[32m                '}';[m
     }[m
 }[m
[1mdiff --git a/build.gradle b/build.gradle[m
[1mindex 9632370..e894cea 100644[m
[1m--- a/build.gradle[m
[1m+++ b/build.gradle[m
[36m@@ -5,7 +5,7 @@[m [mbuildscript {[m
         jcenter()[m
     }[m
     dependencies {[m
[31m-        classpath 'com.android.tools.build:gradle:2.2.2'[m
[32m+[m[32m        classpath 'com.android.tools.build:gradle:2.2.3'[m
         // NOTE: Do not place your application dependencies here; they belong[m
         // in the individual module build.gradle files[m
     }[m
